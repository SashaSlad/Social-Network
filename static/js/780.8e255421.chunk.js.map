{"version":3,"file":"static/js/780.8e255421.chunk.js","mappings":"wPACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,uBAAuB,SAAW,0BAA0B,WAAa,6B,8BCArK,GAAgB,KAAO,mBAAmB,MAAQ,oBAAoB,SAAW,uBAAuB,SAAW,wB,SCgJnH,EApFa,SAACA,GACb,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAsDxB,OAxCAG,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEC,EAAAA,EAAAA,IAAU,wDAADC,OAAyDhB,GAAU,CAClGiB,QAAS,CACR,UAAW,0CAEV,KAAD,EAJIR,EAAQG,EAAAM,KAKRR,EAAOD,EAASU,KACtBtB,EAAaa,EAAKU,OAAOC,OAAS,IAAKT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEvCW,QAAQC,IAAGZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAjB,EAAA,kBAEpB,kBAZmB,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KAcpBxB,GACD,GAAG,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACT,IAAM0B,EAAW,eAAAC,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuB,IAAA,IAAArB,EAAAU,EAAAY,EAAA,OAAAzB,EAAAA,EAAAA,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEKC,EAAAA,EAAAA,IAAU,uDAAwD,CACxFkB,iBAAiB,EACjBhB,QAAS,CACR,UAAW,0CAEV,KAAD,EALIR,EAAQuB,EAAAd,KAOU,KADhBC,EAASV,EAATU,MACCe,aACAH,EAAOZ,EAAKA,KAAZY,GACR9B,EAAU8B,IACVC,EAAAlB,KAAA,gBAAAkB,EAAAnB,KAAA,EAAAmB,EAAAV,GAAAU,EAAA,SAEDT,QAAQC,IAAGQ,EAAAV,IAAQ,yBAAAU,EAAAP,OAAA,GAAAK,EAAA,kBAEpB,kBAhBgB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAkBjBC,GACD,GAAG,KAIFO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,MAAQC,UACvBC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,GAAGC,IAAK7C,OAGlBuC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,SAAWC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,UACAJ,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,QAAM/C,EAAMwC,OAClBQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAD,SAAO/C,EAAMmD,WACbH,EAAAA,EAAAA,KAAA,UACAJ,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,UAAQ/C,EAAMoD,gBAItBR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAQK,QAnEQ,WAClBrD,EAAMsD,SAAStD,EAAMwC,GACtB,EAiE+BO,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,UAAQK,QAhEW,WACrBrD,EAAMuD,YAAYvD,EAAMwC,GACzB,EA8DkCO,SAAC,kBAChCC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,SAAYO,QAzEb,WACpBrD,EAAMwD,WAAWxD,EAAMwC,GACxB,EAuEwDO,SAAC,4BAK1D,E,sCCuDA,EArEgBU,EAAAA,MAAW,SAAAzD,GAC1B,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CyD,EAAWvD,EAAA,GAAEwD,EAAcxD,EAAA,GAU9ByD,EAJkB5D,EAAM6D,UAAUC,QAAO,SAAAC,GAAI,OAChDA,EAAKZ,QAAQa,cAAcC,SAASP,EAAYM,cAAc,IAG7BE,KAAI,SAAAH,GAAI,OACzCf,EAAAA,EAAAA,KAACmB,EAAI,CAEJhB,QAASY,EAAKZ,QACdC,MAAOW,EAAKX,MACZZ,GAAIuB,EAAKvB,GAETgB,WAAYxD,EAAMwD,WAClBF,SAAUtD,EAAMsD,SAChBC,YAAavD,EAAMuD,aAPdQ,EAAKvB,GAQT,IAOG4B,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAhBF,SAACvE,GACvB,OAEC4C,EAAAA,EAAAA,MAAA,QAAM6B,SAAUzE,EAAM0E,aAAa3B,SAAA,EAClCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACLC,UAAWC,EAAAA,GACXC,KAAK,cACLC,YAAY,YACZC,SAAU,CAACC,EAAAA,EAAUb,GACrBvB,UAAWC,EAAAA,YAEZE,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,WAAaC,SAAC,eAGpC,IAIA,OACCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,OAASC,UACxBC,EAAAA,EAAAA,KAAA,SACCkC,KAAK,OACLH,YAAY,kBACZI,MAAOzB,EACP0B,SApDiB,SAACC,GACrB1B,EAAe0B,EAAMC,OAAOH,MAC7B,EAmDItC,UAAWC,EAAAA,cAGbE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,SAAWC,UAC1BC,EAAAA,EAAAA,KAACsB,EAAgB,CAACG,SApCL,SAACc,GAChBvF,EAAMwF,QAAQD,EAAOE,YACtB,OAoCEzC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,MAAQC,SACtBa,MAIL,ICpJA,GAFyB8B,EAAAA,EAAAA,KAhBD,SAACC,GACxB,MAAO,CACN9B,UAAW8B,EAAMC,YAAY/B,UAC7B4B,YAAaE,EAAMC,YAAYH,YAEjC,IAE2B,SAACI,GAC3B,MAAO,CACNL,QAAS,SAACC,GAAkBI,GAASC,EAAAA,EAAAA,IAAqBL,GAAc,EACxEnC,SAAU,SAACyC,GAAaF,GAASG,EAAAA,EAAAA,IAAsBD,GAAS,EAChExC,YAAa,SAACwC,GAAaF,GAASI,EAAAA,EAAAA,IAAyBF,GAAS,EACtEvC,WAAY,SAACuC,GAAaF,GAASK,EAAAA,EAAAA,IAAwBH,GAAS,EAEtE,GAEyBL,CAA6CS,GC7CtE,EAA0B,yB,UCA1B,GAAgB,QAAU,6BAA6B,YAAc,iCAAiC,KAAO,0BAA0B,SAAW,8BAA8B,QAAU,6BAA6B,KAAO,0BAA0B,iBAAmB,uCCyC3Q,EAvC+B,SAACnG,GAE/B,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCmG,EAAQjG,EAAA,GAAEkG,EAAWlG,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAASF,EAAMsG,QAAO9F,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3C+F,EAAM9F,EAAA,GAAE+F,EAAS/F,EAAA,IAEtBG,EAAAA,EAAAA,YAAU,WACT4F,EAAUvG,EAAMsG,OACjB,GAAG,CAACtG,EAAMsG,SAeV,OACC1D,EAAAA,EAAAA,MAAA4D,EAAAA,SAAA,CAAAzD,SAAA,EACGqD,IACDxD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAI,qCACJC,EAAAA,EAAAA,KAAA,QAAMyD,cAlBe,WACxBJ,GAAY,EACb,EAgB0CtD,SAAE/C,EAAMsG,QAAU,WAGzDF,IACApD,EAAAA,EAAAA,KAAA,OAAAD,UACCC,EAAAA,EAAAA,KAAA,SAAOoC,SAdY,SAACsB,GACvBH,EAAUG,EAAEC,cAAcxB,MAC3B,EAYqCyB,WAAW,EAAMC,OAnB3B,WAC1BR,GAAY,GACZrG,EAAM8G,aAAaR,EACpB,EAgBkFnB,MAAOmB,QAK1F,E,mBCOA,GAFiC/B,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAlBD,EAtCT,SAACvE,EAAKa,GAAiBA,EAAbkG,cACjC,OACCnE,EAAAA,EAAAA,MAAA,QAAM6B,SAAUzE,EAAM0E,aAAa3B,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAEZ/C,EAAMgH,QAAShE,EAAAA,EAAAA,KAAA,OAAKH,UAAWoE,EAAAA,EAAAA,iBAAuBlE,SACpD/C,EAAMgH,SAGTpE,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,SAAO/C,EAAMkH,QAAQzG,OAAO,QACjCmC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAc,KAAEoE,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAE7DxE,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBAAsB,KAAEoE,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAAElC,KAAM,iBAEjFtC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA0B,KAAEoE,EAAAA,EAAAA,IAAY,wBAAyB,4BAA6B,GAAItC,EAAAA,QAEtGjC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KAAEoE,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAItC,EAAAA,QAE1DjC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAcsE,OAAOC,KAAKtH,EAAMkH,QAAQK,UAAUrD,KAAI,SAAAsD,GACxD,OACC5E,EAAAA,EAAAA,MAAA,OAAeC,UAAWC,EAAAA,SAAWC,SAAA,EACpCH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAIyE,EAAI,QAAML,EAAAA,EAAAA,IAAYK,EAAK,YAAcA,EAAK,GAAIJ,EAAAA,MAD7CI,EAIZ,YAML,ICoCMC,EAAc,SAACzH,GACpB,OACC4C,EAAAA,EAAAA,MAAA4D,EAAAA,SAAA,CAAAzD,SAAA,EAECH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,SAAO/C,EAAMkH,QAAQzG,OAAO,QACjCmC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAQC,SAAA,EACvBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAAgB/C,EAAMkH,QAAQQ,aAElC9E,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAAwB/C,EAAMkH,QAAQS,eAAiB,MAAQ,QAElE3H,EAAMkH,QAAQS,iBACd/E,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAA4B/C,EAAMkH,QAAQU,8BAG/ChF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAe/C,EAAMkH,QAAQW,YAEjCjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAesE,OAAOC,KAAKtH,EAAMkH,QAAQK,UAAUrD,KAAI,SAAAsD,GACzD,OAAOxE,EAAAA,EAAAA,KAAC8E,EAAO,CAAWC,aAAcP,EAAKQ,aAAchI,EAAMkH,QAAQK,SAASC,IAA7DA,EAEtB,QAEDxE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,QAAUC,SACxB/C,EAAMiI,UAAWjF,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAQK,QAASrD,EAAMkI,aAAanF,SAAC,kBAMjE,EAEM+E,EAAU,SAAHjH,GAAwC,IAAlCkH,EAAYlH,EAAZkH,aAAcC,EAAYnH,EAAZmH,aAChC,OACCpF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,SAAWC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAIgF,IAAiB,IAAEC,IAErD,EAKA,EAjHoB,SAAChI,GAEpB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCmG,EAAQjG,EAAA,GAAEkG,EAAWlG,EAAA,GAI1B,IAAKH,EAAMkH,QACV,OACClE,EAAAA,EAAAA,KAACmF,EAAAA,EAAS,IAmBZ,OACCvF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,aAKhBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAA,EAMzBH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACCC,EAAAA,EAAAA,KAAA,OAAKE,IAAKlD,EAAMkH,QAAQrF,OAAOuG,OAAS/H,EAAW4C,IAAI,MACtDjD,EAAMiI,UACNrF,EAAAA,EAAAA,MAAA,SAAOyF,QAAQ,cAAcxF,UAAWC,EAAAA,iBAAmBC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,kBAAoBC,SAAC,mBACtCC,EAAAA,EAAAA,KAAA,SACCkC,KAAK,OACL1C,GAAG,cACH4C,SApCqB,SAACsB,GACxBA,EAAEpB,OAAOgD,MAAMC,QAClBvI,EAAMwI,UAAU9B,EAAEpB,OAAOgD,MAAM,GAEjC,EAiCOzF,UAAWC,EAAAA,qBAOfF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAOC,SAAA,CAErBqD,GACEpD,EAAAA,EAAAA,KAACyF,EAAe,CAAC1B,cAAe/G,EAAMkH,QAASA,QAASlH,EAAMkH,QAASzC,SAzC7D,SAACiE,GACjB1I,EAAM2I,YAAYD,GAAUE,MAC3B,WACCvC,GAAY,EACb,GAEF,KAoCOrD,EAAAA,EAAAA,KAACyE,EAAW,CAACS,aAAc,WAAQ7B,GAAY,EAAM,EAAGa,QAASlH,EAAMkH,QAASe,QAASjI,EAAMiI,WAElGjF,EAAAA,EAAAA,KAAC6F,EAAsB,CAACvC,OAAQtG,EAAMsG,OAAQQ,aAAc9G,EAAM8G,uBAKvE,ECzDA,EAfgB,SAAC9G,GAChB,OACC4C,EAAAA,EAAAA,MAAA,OAAKC,UAAWiG,EAAU/F,SAAA,EACzBC,EAAAA,EAAAA,KAAC+F,EAAW,CACXP,UAAWxI,EAAMwI,UACjBP,QAASjI,EAAMiI,QACff,QAASlH,EAAMkH,QACfZ,OAAQtG,EAAMsG,OACdqC,YAAa3I,EAAM2I,YACnB7B,aAAc9G,EAAM8G,gBACrB9D,EAAAA,EAAAA,KAACgG,EAAgB,MAGpB,E,8BCLMC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAjH,MAAA,KAAAC,UAAA,CAwCpB,OAxCoBmH,EAAAA,EAAAA,GAAAN,EAAA,EAAAzB,IAAA,iBAAArC,MAErB,WACC,IAAI1E,EAAS+I,KAAKxJ,MAAMyJ,OAAOhJ,OAC1BA,IACJA,EAAS+I,KAAKxJ,MAAM0J,mBAGnBC,OAAOC,SAASC,QAAQ,UAM1BL,KAAKxJ,MAAM8J,eAAerJ,GAC1B+I,KAAKxJ,MAAM+J,UAAUtJ,EACtB,GAAC,CAAA+G,IAAA,oBAAArC,MAGD,WACCqE,KAAKQ,gBACN,GAAC,CAAAxC,IAAA,qBAAArC,MAED,SAAmB8E,EAAWC,EAAWC,GACpCX,KAAKxJ,MAAMyJ,OAAOhJ,SAAWwJ,EAAUR,OAAOhJ,QACjD+I,KAAKQ,gBAEP,GAAC,CAAAxC,IAAA,SAAArC,MAED,WACC,OACCnC,EAAAA,EAAAA,KAAA,OAAKH,UAAWiG,EAAU/F,UACzBC,EAAAA,EAAAA,KAACoH,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKb,KAAKxJ,OAAK,IACtBiI,SAAUuB,KAAKxJ,MAAMyJ,OAAOhJ,OAC5ByG,QAASsC,KAAKxJ,MAAMkH,QACpBZ,OAAQkD,KAAKxJ,MAAMsG,OACnBQ,aAAc0C,KAAKxJ,MAAM8G,aACzB0B,UAAWgB,KAAKxJ,MAAMwI,cAG1B,KAACS,CAAA,CAxCoB,CAASxF,EAAAA,WA2D/B,GAAe6G,EAAAA,EAAAA,KAAQ5E,EAAAA,EAAAA,KAdD,SAACC,GACtB,MAAO,CACNuB,QAASvB,EAAMC,YAAYsB,QAC3BZ,OAAQX,EAAMC,YAAYU,OAC1BoD,iBAAkB/D,EAAM4E,KAAK9J,OAC7B+J,OAAQ7E,EAAM4E,KAAKC,OAErB,GAOgD,CAAEV,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWjD,aAAAA,EAAAA,GAAc0B,UAAAA,EAAAA,GAAWG,YAAAA,EAAAA,KAAgB8B,EAAAA,EAAYC,EAAAA,EAAlI,CAAqJzB,E,kJCpEjJ0B,EAA6B,SAAChF,GACjC,MAAO,CACN6E,OAAQ7E,EAAM4E,KAAKC,OAErB,EAEaE,EAAmB,SAACE,GAAe,IACzCC,EAAiB,SAAA3B,IAAAC,EAAAA,EAAAA,GAAA0B,EAAA3B,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAwB,GAAA,SAAAA,IAAA,OAAAvB,EAAAA,EAAAA,GAAA,KAAAuB,GAAAzB,EAAAjH,MAAA,KAAAC,UAAA,CAMrB,OANqBmH,EAAAA,EAAAA,GAAAsB,EAAA,EAAArD,IAAA,SAAArC,MACtB,WACC,OAAKqE,KAAKxJ,MAAMwK,QAGTxH,EAAAA,EAAAA,KAAC4H,GAASP,EAAAA,EAAAA,GAAA,GAAKb,KAAKxJ,SAF1BgD,EAAAA,EAAAA,KAAC8H,EAAAA,GAAQ,CAACC,GAAG,UAGf,KAACF,CAAA,CANqB,CAASpH,EAAAA,WAWhC,OAFqCiC,EAAAA,EAAAA,IAAQiF,EAARjF,CAAoCmF,EAG1E,C","sources":["webpack://soc-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://soc-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://soc-network/./src/components/Profile/Profile.module.css?b512","webpack://soc-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myposts\":\"MyPosts_myposts__jVT7K\",\"textar\":\"MyPosts_textar__PKHzE\",\"posts\":\"MyPosts_posts__A34dN\",\"textarea\":\"MyPosts_textarea__oVoLq\",\"addpostbtn\":\"MyPosts_addpostbtn__jZNvt\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__NZMBi\",\"items\":\"Post_items__x+q-4\",\"postinfo\":\"Post_postinfo__An1vo\",\"trashbtn\":\"Post_trashbtn__V8uHu\"};","// import React from \"react\";\r\n// import s from './Post.module.css';\r\n// // import userPhoto from \"../../../../assets/images/user_avatar.jpg\";\r\n\r\n\r\n// const Post = (props) => {\r\n// \treturn (\r\n// \t\t<div className={s.item}>\r\n// \t\t\t<img alt='' src=\"https://w1.pngwing.com/pngs/664/825/png-transparent-social-media-icons-avatar-male-man-female-face-facial-hair-facial-expression.png\" />\r\n// \t\t\t{/* <img src={props.profile.photos.large || userPhoto} alt=\"#\" /> */}\r\n// \t\t\t{/* <img src={userPhoto} /> */}\r\n// \t\t\t<br />\r\n// \t\t\t<span> Post {props.id}</span>\r\n// \t\t\t<br />\r\n// \t\t\t<span>{props.message}</span>\r\n// \t\t\t<div>\r\n// \t\t\t\t<span>Likes: {props.likes}</span>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\n// export default Post;\r\n\r\n//---------------------------------------this is good below--------------------------------------------------------\r\n\r\n\r\n// import React from \"react\";\r\n// import s from './Post.module.css';\r\n\r\n// const Post = (props) => {\r\n// \tconst handleDelete = () => {\r\n// \t\tprops.deletePost(props.id);\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div className={s.item}>\r\n// \t\t\t<img alt='' src=\"https://w1.pngwing.com/pngs/664/825/png-transparent-social-media-icons-avatar-male-man-female-face-facial-hair-facial-expression.png\" />\r\n// \t\t\t<br />\r\n// \t\t\t<span> Post {props.id}</span>\r\n// \t\t\t<br />\r\n// \t\t\t<span>{props.message}</span>\r\n// \t\t\t<div>\r\n// \t\t\t\t<span>Likes: {props.likes}</span>\r\n// \t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n// \t\t\t\t<button>Like</button>\r\n// \t\t\t\t<button>Dislike</button>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\n// export default Post;\r\n\r\n\r\n//--------------------------------this with ava--------------------------------------------\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\tconst [userPhoto, setUserPhoto] = useState('');\r\n\tconst [userId, setUserId] = useState('');\r\n\r\n\tconst handleDelete = () => {\r\n\t\tprops.deletePost(props.id);\r\n\t}\r\n\r\n\tconst handleLike = () => {\r\n\t\tprops.likePost(props.id);\r\n\t};\r\n\r\n\tconst handleDislike = () => {\r\n\t\tprops.dislikePost(props.id);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserPhoto = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"API-KEY\": \"bfd52358-f556-49fe-b856-3044468355c0\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst user = response.data;\r\n\t\t\t\tsetUserPhoto(user.photos.small || ''); // Set user's photo or empty string if photo is not available\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchUserPhoto();\r\n\t}, [userId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUserId = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get('https://social-network.samuraijs.com/api/1.0/auth/me', {\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"API-KEY\": \"bfd52358-f556-49fe-b856-3044468355c0\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst { data } = response;\r\n\t\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\t\tconst { id } = data.data; // Assuming the response data has the 'id' property\r\n\t\t\t\t\tsetUserId(id);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchUserId();\r\n\t}, []);\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.item}>\r\n\t\t\t<div className={s.items}>\r\n\t\t\t\t<div className={s.photo}>\r\n\t\t\t\t\t<img alt='' src={userPhoto} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={s.postinfo}>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span>Post {props.id}</span>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span>{props.message}</span>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span>Likes: {props.likes}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.btns}>\r\n\t\t\t\t<button onClick={handleLike}>💓</button>\r\n\t\t\t\t<button onClick={handleDislike}>👎</button>\r\n\t\t\t\t<button className={s.trashbtn} onClick={handleDelete}>Delete&#128465;</button>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n//-------------------------------------------------------------\r\n\r\n","// import React from \"react\";\r\n// //import { addPostActionCreator, updateNewPostActionCreator } from \"../../../Redux/pofile-reducer\";\r\n// import s from './MyPosts.module.css';\r\n// import Post from \"./Post/Post\";\r\n// import { Field, reduxForm } from 'redux-form';\r\n// import { maxLengthCreator, required } from \"../../utils/validators/validators.ts\";\r\n// import { Textarea } from \"../../Common/FormsControls/FormsControls.tsx\";\r\n\r\n\r\n// const MyPosts = React.memo(props => {\r\n\r\n// \t// shouldComponentUpdate(nextProps, nextState) {\r\n// \t// \treturn nextProps !== this.nextProps || nextState !== this.nextState;\r\n// \t// }\r\n\r\n// \tlet postsElements = props.postsData.map(post => <Post key={post.id} message={post.message} likes={post.likes} id={post.id} />);\r\n\r\n// \t//let newPostElement = React.createRef();\r\n\r\n// \tlet onaddPost = (values) => {\r\n// \t\tprops.addPost(values.newPostText);\r\n// \t}\r\n\r\n// \tconst maxLength10 = maxLengthCreator(10);\r\n\r\n// \tconst addNewPostForm = (props) => {\r\n// \t\treturn (\r\n// \t\t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t\t<Field component={Textarea}\r\n// \t\t\t\t\tname={\"newPostText\"}\r\n// \t\t\t\t\tplaceholder='Send post'\r\n// \t\t\t\t\tvalidate={[required, maxLength10]}\r\n// \t\t\t\t/>\r\n// \t\t\t\t<button >Add post</button>\r\n// \t\t\t\t<button>Remove</button>\r\n// \t\t\t</form>\r\n// \t\t)\r\n// \t}\r\n\r\n// \tconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(addNewPostForm);\r\n\r\n// \treturn (\r\n// \t\t<div className={s.myposts}>\r\n// \t\t\t<br />\r\n// \t\t\t<div className={s.textar}>\r\n// \t\t\t\t<AddPostFormRedux onSubmit={onaddPost} />\r\n// \t\t\t</div>\r\n// \t\t\t<div className={s.posts}>\r\n// \t\t\t\t{postsElements}\r\n// \t\t\t</div>\r\n// \t\t</div >\r\n// \t)\r\n// }\r\n// )\r\n// export default MyPosts;\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import s from './MyPosts.module.css';\r\n// import Post from \"./Post/Post\";\r\n// import { Field, reduxForm } from 'redux-form';\r\n// import { maxLengthCreator, required } from \"../../utils/validators/validators.ts\";\r\n// import { Textarea } from \"../../Common/FormsControls/FormsControls.tsx\";\r\n\r\n// const MyPosts = React.memo(props => {\r\n// \tlet postsElements = props.postsData.map(post => (\r\n// \t\t<Post\r\n// \t\t\tkey={post.id}\r\n// \t\t\tmessage={post.message}\r\n// \t\t\tlikes={post.likes}\r\n// \t\t\tid={post.id}\r\n// \t\t\tdeletePost={props.deletePost}\r\n// \t\t/>\r\n// \t));\r\n\r\n// \tlet onAddPost = (values) => {\r\n// \t\tprops.addPost(values.newPostText);\r\n// \t}\r\n\r\n// \tconst maxLength10 = maxLengthCreator(10);\r\n\r\n// \tconst addNewPostForm = (props) => {\r\n// \t\treturn (\r\n// \t\t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t\t<Field\r\n// \t\t\t\t\tcomponent={Textarea}\r\n// \t\t\t\t\tname=\"newPostText\"\r\n// \t\t\t\t\tplaceholder=\"Send post\"\r\n// \t\t\t\t\tvalidate={[required, maxLength10]}\r\n// \t\t\t\t/>\r\n// \t\t\t\t<button>Add post</button>\r\n// \t\t\t</form>\r\n// \t\t)\r\n// \t}\r\n\r\n// \tconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(addNewPostForm);\r\n\r\n// \treturn (\r\n// \t\t<div className={s.myPosts}>\r\n// \t\t\t<div className={s.textArea}>\r\n// \t\t\t\t<AddPostFormRedux onSubmit={onAddPost} />\r\n// \t\t\t</div>\r\n// \t\t\t<div className={s.posts}>\r\n// \t\t\t\t{postsElements}\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// });\r\n\r\n// export default MyPosts;\r\n\r\n\r\n//----------------------------------------------------------------------------\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators.ts\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls.tsx\";\r\n// import { profileAPI } from \"../../../api/api.ts\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tconst [searchQuery, setSearchQuery] = useState('');\r\n\r\n\tconst handleSearch = (event) => {\r\n\t\tsetSearchQuery(event.target.value);\r\n\t}\r\n\r\n\tconst filteredPosts = props.postsData.filter(post =>\r\n\t\tpost.message.toLowerCase().includes(searchQuery.toLowerCase())\r\n\t);\r\n\r\n\tlet postsElements = filteredPosts.map(post => (\r\n\t\t<Post\r\n\t\t\tkey={post.id}\r\n\t\t\tmessage={post.message}\r\n\t\t\tlikes={post.likes}\r\n\t\t\tid={post.id}\r\n\t\t\t// userId={userId}\r\n\t\t\tdeletePost={props.deletePost}\r\n\t\t\tlikePost={props.likePost}\r\n\t\t\tdislikePost={props.dislikePost}\r\n\t\t/>\r\n\t));\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\tconst maxLength10 = maxLengthCreator(50);\r\n\r\n\tconst addNewPostForm = (props) => {\r\n\t\treturn (\r\n\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname=\"newPostText\"\r\n\t\t\t\t\tplaceholder=\"Send post\"\r\n\t\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t\t\tclassName={s.textarea}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className={s.addpostbtn}>Add post</button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\tconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(addNewPostForm);\r\n\r\n\treturn (\r\n\t\t<div className={s.myPosts}>\r\n\t\t\t<div className={s.search}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search posts...\"\r\n\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\tonChange={handleSearch}\r\n\t\t\t\t\tclassName={s.textarea}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.textArea}>\r\n\t\t\t\t<AddPostFormRedux onSubmit={onAddPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default MyPosts;\r\n","// import { addPostActionCreator } from \"../../../Redux/pofile-reducer.ts\";\r\n// import MyPosts from \"./MyPosts\";\r\n// import { connect } from \"react-redux/es/exports\";\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n// \t\tpostsData: state.profilePage.postsData,\r\n// \t\tnewPostText: state.profilePage.newPostText\r\n// \t}\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n// \treturn {\r\n// \t\taddPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n// \t}\r\n// }\r\n\r\n// const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n// export default MyPostsContainer;\r\n\r\n//-----------------------------------------------------------------------------------------------\r\n\r\n\r\n// import { addPostActionCreator, likePostActionCreator, dislikePostActionCreator, deletePostActionCreator } from \"../../../Redux/profile-reducer.ts\";\r\nimport { addPostActionCreator, likePostActionCreator, dislikePostActionCreator, deletePostActionCreator } from \"../../../Redux/pofile-reducer.ts\";\r\n\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tpostsData: state.profilePage.postsData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) },\r\n\t\tlikePost: (postId) => { dispatch(likePostActionCreator(postId)) },\r\n\t\tdislikePost: (postId) => { dispatch(dislikePostActionCreator(postId)) },\r\n\t\tdeletePost: (postId) => { dispatch(deletePostActionCreator(postId)) }\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__ipCJ7\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__lpuza\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__+qCZp\",\"info\":\"ProfileInfo_info__y3I+2\",\"contacts\":\"ProfileInfo_contacts__5hc6e\",\"editbtn\":\"ProfileInfo_editbtn__rQ191\",\"cont\":\"ProfileInfo_cont__ORxcf\",\"uploadPhotoLabel\":\"ProfileInfo_uploadPhotoLabel__hhjqM\"};","import React, { useEffect, useState } from \"react\";\r\n// import s from \"../ProfileInfo/ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status])\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>{\"Status (double click to edit): \"}</b>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || 'HI!'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../Common/FormsControls/FormsControls.tsx\";\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = (props, { initialValues }) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} >\r\n\t\t\t<div><button>Save:</button></div>\r\n\t\t\t{\r\n\t\t\t\tprops.error && <div className={style.formSummaryError}>\r\n\t\t\t\t\t{props.error}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div> ID = {props.profile.userId} </div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>My prfessional skills:</b> {createField(\"My prfessional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Contacts:</b>{Object.keys(props.profile.contacts).map(key => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={key} className={s.contacts}>\r\n\t\t\t\t\t\t\t\t<b>{key}:</b>{createField(key, \"contacts.\" + key, [], Input)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</form >\r\n\t)\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user_avatar.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n// import ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\r\n\r\n\r\n\tif (!props.profile) {\r\n\t\treturn (\r\n\t\t\t<Preloader />\r\n\t\t)\r\n\t};\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.savePhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.saveProfile(formData).then(\r\n\t\t\t() => {\r\n\t\t\t\tsetEditMode(false);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.img_wrapp}>\r\n\t\t\t\t{/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRRZLImuUEHycl_TYLJuhMzx4sJKmGCCVaQfw&usqp=CAU\" alt=\"#\" /> */}\r\n\t\t\t\t{/* <img src=\"https://www.innovationnewsnetwork.com/wp-content/uploads/2020/12/the-stars-in-the-Milky-Way-800x450.jpg\" alt=\"#\" /> */}\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className={s.profile}>\r\n\t\t\t\t{/* <div>\r\n\t\t\t\t\t<img src={props.profile.photos.large || userPhoto} alt=\"#\" />\r\n\t\t\t\t\t{props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} className={s.uploadPhoto} />}\r\n\t\t\t\t</div> */}\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={props.profile.photos.large || userPhoto} alt=\"#\" />\r\n\t\t\t\t\t{props.isOwner && (\r\n\t\t\t\t\t\t<label htmlFor=\"photo-input\" className={s.uploadPhotoLabel}>\r\n\t\t\t\t\t\t\t<span className={s.uploadButtonLabel}>Add new photo</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tid=\"photo-input\"\r\n\t\t\t\t\t\t\t\tonChange={onMainPhotoSelected}\r\n\t\t\t\t\t\t\t\tclassName={s.uploadPhoto}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className={s.info}>\r\n\t\t\t\t\t{/* <div>Hi! It's my first project on React! I really hope you like it! ♥ </div> */}\r\n\t\t\t\t\t{editMode\r\n\t\t\t\t\t\t? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n\t\t\t\t\t\t: <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\r\n\r\n\t\t\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* {props.isOwner && <div><button onClick={props.goToEditMode}>Edit:</button></div>} */}\r\n\t\t\t<div> ID = {props.profile.userId} </div>\r\n\t\t\t<div className={s.infos}>\r\n\t\t\t\t<div className={s.cont}>\r\n\t\t\t\t\t<b>Full name: </b>{props.profile.fullName}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cont}>\r\n\t\t\t\t\t<b>Looking for a job: </b>{props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.profile.lookingForAJob &&\r\n\t\t\t\t\t<div className={s.cont}>\r\n\t\t\t\t\t\t<b>My prfessional skills: </b>{props.profile.lookingForAJobDescription}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className={s.cont}>\r\n\t\t\t\t\t<b>About me: </b>{props.profile.aboutMe}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cont}>\r\n\t\t\t\t\t<b>Contacts: </b>{Object.keys(props.profile.contacts).map(key => {\r\n\t\t\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.editbtn}>\r\n\t\t\t\t\t{props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n\treturn (\r\n\t\t<div className={s.contacts}><b>{contactTitle}</b>:{contactValue}</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport p from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div className={p.content}>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\t\tupdateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport p from './Profile.module.css';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../Redux/pofile-reducer.ts\";\r\n// import { withRouter } from 'react-router-dom';\r\nimport withRouter from \"../Common/withRouter/withRouter\";\r\n\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\t// userId = 14166;\r\n\t\t\tif (!userId) {\r\n\t\t\t\twindow.location.replace(\"/login\");\r\n\t\t\t}\r\n\t\t\t// 27905   -> my 28218\r\n\t\t\t// 27214\r\n\t\t\t// 14166\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.params.userId !== prevProps.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={p.content} >\r\n\t\t\t\t<Profile {...this.props}\r\n\t\t\t\t\tisOwner={!this.props.params.userId}\r\n\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\tsavePhoto={this.props.savePhoto} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\n// let WitUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(WitUrlDataContainerComponent);\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }), withRouter, withAuthRedirect,)(ProfileContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return (\r\n\t\t\t\t<Navigate to=\"/login\" />\r\n\t\t\t);\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","userPhoto","setUserPhoto","_useState3","_useState4","userId","setUserId","useEffect","fetchUserPhoto","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","user","wrap","_context","prev","next","axios","concat","headers","sent","data","photos","small","t0","console","log","stop","apply","arguments","fetchUserId","_ref2","_callee2","id","_context2","withCredentials","resultCode","_jsxs","className","s","children","_jsx","alt","src","message","likes","onClick","likePost","dislikePost","deletePost","React","searchQuery","setSearchQuery","postsElements","postsData","filter","post","toLowerCase","includes","map","Post","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","value","onChange","event","target","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","postId","likePostActionCreator","dislikePostActionCreator","deletePostActionCreator","MyPosts","editMode","setEditMode","status","setStatus","_Fragment","onDoubleClick","e","currentTarget","autoFocus","onBlur","updateStatus","initialValues","error","style","profile","createField","Input","Object","keys","contacts","key","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","isOwner","goToEditMode","Preloader","large","htmlFor","files","length","savePhoto","ProfileDataForm","formData","saveProfile","then","ProfileStatusWithHooks","p","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","this","params","authorizedUserId","window","location","replace","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","_objectSpread","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}