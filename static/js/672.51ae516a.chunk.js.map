{"version":3,"file":"static/js/672.51ae516a.chunk.js","mappings":"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","sources":["webpack://soc-network/./src/components/Common/FormsControls/FormsControls.module.css?8edf","components/Common/FormsControls/FormsControls.js","webpack://soc-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/utils/validators/validators.js","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__MfvgU\",\"error\":\"FormsControls_error__6I7oP\",\"formSummaryError\":\"FormsControls_formSummaryError__C6mo4\"};","import React from \"react\";\r\nimport style from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, child, ...props }) => {\r\n\tconst hasError = touched && error;\r\n\r\n\treturn (\r\n\t\t<div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\r\n\t\t\t{hasError && <span >{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl{...props}><textarea {...input}{...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl{...props}><input {...input}{...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n\t<div>\r\n\t\t<Field placeholder={placeholder}\r\n\t\t\tname={name} validate={validators}\r\n\t\t\tcomponent={component} {...props} />{text}\r\n\t</div>);","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__GKEYH\",\"line\":\"Dialogs_line__4ltYQ\",\"sendMessageWrapp\":\"Dialogs_sendMessageWrapp__kMUrx\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={s.dialog}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.message}>{props.message}</div>\r\n\t\t\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from \"../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogsData.map(dialogs => <DialogItem name={dialogs.name} key={dialogs.id} id={dialogs.id} />);\r\n\tlet messagesElements = state.messagesData.map(messages => <Message message={messages.message} key={messages.id} id={messages.id} />);\r\n\t//let newMessageBody = state.newMessageBody;\r\n\r\n\tconst maxLength15 = maxLengthCreator(15);\r\n\r\n\r\n\tconst AddMessageForm = (props) => {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\tname={\"newMessageBody\"}\r\n\t\t\t\t\tplaceholder='Enter your message'\r\n\t\t\t\t\tvalidate={[required, maxLength15]} />\r\n\r\n\t\t\t\t<button> Send </button>\r\n\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\tconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.line}></div>\r\n\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<div className={s.sendMessageWrapp}>\r\n\r\n\t\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import { sendMessageCreator } from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => { dispatch(sendMessageCreator(newMessageBody)) },\r\n\t}\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\n","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Fieled is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n\treturn undefined;\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return (\r\n\t\t\t\t<Navigate to=\"/login\" />\r\n\t\t\t);\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n"],"names":["FormControl","_ref","input","_ref$meta","meta","touched","error","props","child","_objectWithoutProperties","_excluded","hasError","_jsxs","className","style","children","_jsx","Textarea","restProps","_excluded2","_objectSpread","path","id","s","NavLink","to","name","message","state","dialogsPage","dialogsElements","dialogsData","map","dialogs","DialogItem","messagesElements","messagesData","messages","Message","maxLength15","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","value","maxLength","length","concat","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","Navigate","React"],"sourceRoot":""}